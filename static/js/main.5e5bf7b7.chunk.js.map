{"version":3,"sources":["apis/trivia.js","actions/index.js","actions/types.js","components/Dashboard.js","components/Header.js","components/Activities.js","components/activities/Trivia.js","components/activities/memoryPictures.js","components/activities/Memory.js","components/activities/Tasks.js","components/App.js","reducers/userReducer.js","reducers/activeUserReducer.js","reducers/triviaReducer.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","addPoints","user","amount","points","type","payload","getTrivia","dispatch","a","trivia","get","res","data","results","Dashboard","useState","inputVal","setInputVal","useDispatch","users","useSelector","state","className","map","to","key","userid","onClick","setActive","name","renderUsers","onSubmit","event","preventDefault","uniqid","tasks","value","onChange","target","aria-hidden","Header","Activities","activeUser","options","img","activity","toLowerCase","class","src","Trivia","msg","setMsg","question","wrongAnswers","setWrongAnswers","useEffect","atob","showQuestion","answers","incorrect_answers","length","push","correct_answer","ans","i","j","Math","floor","random","shuffleAnswers","pts","setTimeout","checkAnswer","renderAnswers","showMsg","memoryPics","clicked","Memory","memPics","setMemPics","selectedPics","setSelectedPics","successMsg","setSuccessMsg","gameOver","setGameOver","removeSuccessMsg","pic","index","console","log","alt","revealImg","pic1","pic2","checkSelectedPics","isComplete","forEach","checkComplete","refreshPics","resetGame","Tasks","task","addTask","text","complete","id","completeTask","clearTasks","App","props","path","exact","component","INITIAL_STATE","JSON","parse","localStorage","getItem","combineReducers","action","localUsers","setItem","stringify","require","config","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"8ZAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,wBCeEC,EAAY,SAACC,EAAMC,GAE9B,OADAD,EAAKE,QAAUD,EACP,CACNE,KClBsB,aDmBtBC,QAASJ,IAMAK,EAAY,yDAAM,WAAOC,GAAP,eAAAC,EAAA,sEACXC,EAAOC,IAAI,6EADA,OACvBC,EADuB,OAE7BJ,EAAS,CAACH,KC5Bc,aD4BIC,QAASM,EAAIC,KAAKC,QAAQ,KAFzB,2CAAN,uDE8CVC,G,MAhEG,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACfC,EADe,KACLC,EADK,KAEhBV,EAAWW,cACXC,EAAQC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,SA4BzC,OACE,yBAAKG,UAAU,WACb,6BACE,wBAAIA,UAAU,iCAAd,4BACA,wBAAIA,UAAU,gBAlBA,WAClB,GAAIH,EACF,OACEA,EAAMI,KAAI,SAAAtB,GACR,OACE,kBAAC,IAAD,CAAMuB,GAAG,eACP,4BAAQC,IAAKxB,EAAKyB,OAAQC,QAAU,kBAAMpB,EFtB/B,SAACN,GACxB,MAAQ,CACNG,KCZsB,aDatBC,QAASJ,GEmBoD2B,CAAU3B,MAASA,EAAK4B,UAa9EC,KAIL,yBAAKR,UAAU,UACb,wBAAIA,UAAU,wDAAd,wBACA,yBAAKA,UAAU,+CACb,0BAAMS,SAlCO,SAACC,GACpBA,EAAMC,iBACW,KAAbjB,IACFT,EFjBI,CACNH,KCNoB,WDOpBC,QEemB,CAAEwB,KAAMb,EAAUU,OAAQQ,MAAU/B,OAAQ,EAAGgC,MAAO,MACvElB,EAAY,OA+BJ,2BAAOb,KAAK,OAAOgC,MAAOpB,EAAUqB,SAvC1B,SAACL,GACrBf,EAAYe,EAAMM,OAAOF,QAsC+Cd,UAAU,eACxE,6BACI,4BAAQA,UAAU,oCACd,yBAAKA,UAAU,kBACX,uBAAGiB,cAAY,OAAOjB,UAAU,oBAEpC,yBAAKA,UAAU,mBAAf,oBC7CPkB,G,MAXA,WACX,OACE,yBAAKlB,UAAU,kBACX,wBAAIA,UAAU,WAAd,YACA,kBAAC,IAAD,CAAME,GAAG,KACP,4CCkCGiB,G,MArCI,WACjB,IAAMxC,EAAOmB,aAAY,SAAAC,GAAK,OAAIA,EAAMqB,cAElCC,EAAU,CAAC,CAACd,KAAM,SAAUe,IAAK,0GAA2G,CAACf,KAAM,SAAUe,IAAK,8GAA+G,CAACf,KAAM,QAASe,IAAK,6FAoB5S,OACE,6BACE,yBAAKtB,UAAU,YACb,qCAAWrB,EAAK4B,KAAhB,KACA,wCAAc5B,EAAKE,OAAnB,qBACA,oEAEF,yBAAKmB,UAAU,oBAvBfqB,EAAQpB,KAAI,SAAAsB,GACV,OACE,kBAAC,IAAD,CAAMrB,GAAE,WAAMqB,EAAShB,KAAKiB,gBAC1B,yBAAKC,MAAM,aACT,4BAAQzB,UAAU,gBAChB,4BAAKuB,EAAShB,MACd,yBAAKmB,IAAKH,EAASD,gBC0FpBK,G,MAvGA,WACb,IAAM1C,EAAWW,cADE,EAGGH,mBAAS,IAHZ,mBAGZmC,EAHY,KAGPC,EAHO,KAIbC,EAAWhC,aAAY,SAAAC,GAAK,OAAIA,EAAMZ,UACtCR,EAAOmB,aAAY,SAAAC,GAAK,OAAIA,EAAMqB,cALrB,EAOqB3B,mBAAS,GAP9B,mBAOZsC,EAPY,KAOEC,EAPF,KASnBC,qBAAU,WACRhD,EAASD,OACR,IAkEH,OACE,yBAAKgB,UAAU,WACb,6BACE,kBAAC,IAAD,CAAME,GAAG,eACL,4BAAQF,UAAU,UAAlB,mBAIN,yBAAKA,UAAU,UACX,uBAAGA,UAAU,UAAb,WAA+BrB,EAAKE,SAGxC,6BACE,wBAAImB,UAAU,YAhCC,WACnB,GAAI8B,EAASA,SAEX,OADeI,KAAKJ,EAASA,UA8BDK,IAC1B,wBAAInC,UAAU,+CArDE,WACpB,IAAMoC,EAAUN,EAASO,kBAEzB,GAAID,EAMF,OALuB,IAAnBA,EAAQE,SACVF,EAAQG,KAAKT,EAASU,gBA9BL,SAACC,GACtB,IAAK,IAAIC,EAAID,EAAIH,OAAS,EAAGI,EAAI,EAAGA,IAAK,CACvC,IAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADH,EAEpB,CAACD,EAAIE,GAAIF,EAAIC,IAA/BD,EAAIC,GAFkC,KAE9BD,EAAIE,GAF0B,MA8BrCI,CAAeX,IAIfA,EAAQnC,KAAI,SAAAwC,GACV,OACE,4BAAQhB,MAAM,gBAAgBpB,QAAS,kBA7B7B,SAACoC,GACnB,GAAIA,IAAQX,EAASU,eAAgB,CACnC,IAAIQ,EAAO,IAAoB,GAAbjB,EAClB9C,EAASP,EAAUC,EAAMqE,IACzBnB,EAAO,wBAAD,OAAyBmB,EAAzB,YACNC,YAAW,WACTjB,EAAgB,GAChB/C,EAASD,KACT6C,EAAO,MACN,UAEHG,EAAgBD,EAAa,GAC7BF,EAAO,yBAiB4CqB,CAAYT,KAAOP,KAAKO,OA0CtEU,KAIL,yBAAKnD,UAAU,WA/BH,WACd,GAAY,KAAR4B,EACF,OACE,6BACE,wBAAI5B,UAAsB,MAAX4B,EAAI,GAAa,WAAa,iCAC1CA,IA2BFwB,O,QCvGEC,EAAa,CAAC,CAAE/B,IAAK,yEAA0EgC,SAAS,GACnH,CAAEhC,IAAK,yEAA0EgC,SAAS,GAC1F,CAAEhC,IAAK,+EAAgFgC,SAAS,GAChG,CAAEhC,IAAK,+EAAgFgC,SAAS,GAChG,CAAEhC,IAAK,uFAAwFgC,SAAS,GACxG,CAAEhC,IAAK,uFAAwFgC,SAAS,GACxG,CAAEhC,IAAK,+DAAgEgC,SAAS,GAChF,CAAEhC,IAAK,+DAAgEgC,SAAS,GAChF,CAAEhC,IAAK,+EAAgFgC,SAAS,GAChG,CAAEhC,IAAK,+EAAgFgC,SAAS,GAChG,CAAEhC,IAAK,6FAA8FgC,SAAS,GAC9G,CAAEhC,IAAK,6FAA8FgC,SAAS,GAC9G,CAAEhC,IAAK,+EAAgFgC,SAAS,GAChG,CAAEhC,IAAK,+EAAgFgC,SAAS,GAChG,CAAEhC,IAAK,+EAAgFgC,SAAS,GAChG,CAAEhC,IAAK,+EAAgFgC,SAAS,IC6HnFC,G,MAnIA,WACb,IAAMtE,EAAWW,cAEXjB,EAAOmB,aAAY,SAAAC,GAAK,OAAIA,EAAMqB,cAHrB,EAKW3B,mBAAS4D,GALpB,mBAKZG,EALY,KAKHC,EALG,OAMqBhE,mBAAS,IAN9B,mBAMZiE,EANY,KAMEC,EANF,OAOkBlE,mBAAS,IAP3B,mBAOZmE,EAPY,KAOAC,EAPA,OAQapE,oBAAS,GARtB,mBAQZqE,EARY,KAQFC,EARE,KAUnB9B,qBAAU,WACR,IAAK,IAAIS,EAAIc,EAAQlB,OAAS,EAAGI,EAAI,EAAGA,IAAK,CAC3C,IAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADC,EAEhB,CAACc,EAAQb,GAAIa,EAAQd,IAA/Cc,EAAQd,GAFkC,KAE9Bc,EAAQb,GAFsB,KAI7Cc,EAAW,YAAID,MACd,IAEH,IAgDMQ,EAAmB,WACvBf,YAAW,WACTY,EAAc,MACb,MAwCL,OACE,6BACE,yBAAK7D,UAAU,gBACb,4CACA,4DAGF,yBAAKA,UAAU,cAxFfwD,EAAQvD,KAAI,SAACgE,EAAKC,GAEhB,OADAC,QAAQC,IAAIH,GAEV,4BAAQjE,UAAU,WAChB,yBAAK0B,IAAKuC,EAAI3C,IAAK+C,IAAI,SAAShE,QAAS,kBAdjC,SAAC6D,GACjBV,EAAQU,GAAOZ,SAAU,EACzBa,QAAQC,IAAIf,EAAWa,IACvBT,EAAW,YAAID,IACfE,EAAanB,KAAKiB,EAAQU,IAC1BP,EAAgBD,GASuCY,CAAUJ,IAAQlE,UAAWiE,EAAIX,QAAU,UAAY,6BAkBtF,WAXT,IAACiB,EAAMC,EAYM,IAAxBd,EAAapB,SACXoB,EAAa,GAAGpC,MAAQoC,EAAa,GAAGpC,KAC1CrC,EAASP,EAAUC,EAAM,KACzBgF,EAAgB,IAChBE,EAAc,0BACdG,MAjBYO,EAmBHb,EAAa,GAnBJc,EAmBQd,EAAa,GAlB3CT,YAAW,WACTO,EAAQvD,KAAI,SAAAgE,GACNA,EAAI3C,MAAQiD,EAAKjD,KAAO2C,EAAI3C,MAAQkD,EAAKlD,MAC3C2C,EAAIX,SAAU,MAGlBG,EAAW,YAAID,MACd,KAYCG,EAAgB,IAChBE,EAAc,cACdG,MA0DDS,GACD,yBAAKzE,UAAU,cACb,wBAAIA,UAAU,eAAe4D,GAC7B,wBAAI5D,UAAU,WAAd,mBAAyCrB,EAAKE,SAlD9B,WACpB,IAAI6F,GAAa,EACjBlB,EAAQmB,SAAQ,SAAAV,GACTA,EAAIX,UACPoB,GAAa,MAIbA,IAAeZ,GACjBC,GAAY,GA2CXa,GAvBa,WAChB,GAAId,EACF,OACE,4BAAQzD,QAAS,kBAnBH,WAClBmD,EAAQvD,KAAI,SAAAgE,GAEV,OADAA,EAAIX,SAAU,EACPW,KAIT,IAAK,IAAIvB,EAAIc,EAAQlB,OAAS,EAAGI,EAAI,EAAGA,IAAK,CAC3C,IAAMC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADC,EAEhB,CAACc,EAAQb,GAAIa,EAAQd,IAA/Cc,EAAQd,GAFkC,KAE9Bc,EAAQb,GAFsB,KAK7Cc,EAAW,YAAID,IACfO,GAAY,GAMec,KAAvB,eAqBDC,MC3EQC,G,MAnDD,WACZ,IAAM9F,EAAWW,cAEXiB,EAAQf,aAAY,SAAAC,GAAK,OAAIA,EAAMqB,WAAWP,SAHlC,EAIcpB,mBAAS,IAJvB,mBAIXC,EAJW,KAIDC,EAJC,KAKZhB,EAAOmB,aAAY,SAAAC,GAAK,OAAIA,EAAMqB,cAgCxC,OACE,yBAAKpB,UAAU,kBACb,0BAAMS,SA3BY,SAACC,GACrBA,EAAMC,iBAEN1B,ERYmB,SAAC+F,EAAMrG,GAC5B,MAAQ,CACNG,KCjCoB,WDkCpBC,QAAS,CAAEiG,OAAMrG,SQfRsG,CAAQ,CAAEC,KAAMxF,EAAUyF,UAAU,EAAOC,GAAIxE,OAAYjC,IACpEgB,EAAY,MAwBR,2BAAOb,KAAK,OAAOgC,MAAOpB,EAAUqB,SAhCpB,SAACL,GACrBf,EAAYe,EAAMM,OAAOF,QA+BwCd,UAAU,eACvE,4BAAQA,UAAU,WAAlB,aAEF,wBAAIA,UAAU,cAnBhBmE,QAAQC,IAAI,YAEVvD,EAAMZ,KAAI,SAAA+E,GACR,OACE,wBAAI7E,IAAK6E,EAAKI,GAAIpF,UAAWgF,EAAKG,SAAW,gBAAkB,mBAC7D,2BAAOrG,KAAK,WAAWuB,QAAU,kBAVjB+E,EAUwCJ,EAAKI,QATrEnG,ERcwB,SAACmG,EAAIzG,GAC/B,MAAQ,CACNG,KCvCyB,gBDwCzBC,QAAS,CAAEqG,KAAIzG,SQjBN0G,CAAaD,EAAIzG,IADH,IAACyG,GAUmDpF,UAAU,UAC7E,uBAAGA,UAAU,aAAagF,EAAKE,YAgBrC,4BAAQ7E,QAAS,kBAAMpB,ERLH,SAACN,GACzB,MAAQ,CACNG,KC7CuB,cD8CvBC,QAASJ,GQEyB2G,CAAW3G,KAAQqB,UAAU,aAA7D,kBC7BSuF,EAfH,SAACC,GACX,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWnG,IACjC,kBAAC,IAAD,CAAOiG,KAAK,cAAcE,UAAWxE,IACrC,kBAAC,IAAD,CAAOsE,KAAK,UAAUE,UAAWhE,IACjC,kBAAC,IAAD,CAAO8D,KAAK,UAAUE,UAAWpC,IACjC,kBAAC,IAAD,CAAOkC,KAAK,SAASE,UAAWZ,OCjBlCa,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,G,QCA7DJ,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,GCAlEJ,EAAgB,GCGPK,cAAgB,CAC7BpG,MHFa,WAAoC,IAAnCE,EAAkC,uDAA1B6F,EAAeM,EAAW,uCAChD,OAAQA,EAAOpH,MACb,ITNoB,WSOlB,IAAMqH,EAAaN,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GAGhE,OAFAG,EAAW5D,KAAK2D,EAAOnH,SACvBgH,aAAaK,QAAQ,QAASP,KAAKQ,UAAUF,IACvC,GAAN,mBAAWpG,GAAX,CAAkBmG,EAAOnH,UAC3B,ITRsB,aSgBpB,OAPAgB,EAAME,KAAI,SAAAtB,GAIR,OAHIA,EAAKyB,SAAW8F,EAAOnH,QAAQqB,SACjCzB,EAAKE,OAASqH,EAAOnH,QAAQF,QAExBF,KAEToH,aAAaK,QAAQ,QAASP,KAAKQ,UAAUtG,IACtCA,EACT,QACE,OAAOA,IGdXqB,WFHa,WAAoC,IAAnCrB,EAAkC,uDAA1B6F,EAAeM,EAAW,uCAChD,OAAQA,EAAOpH,MACb,IVLsB,aUMpB,OAAO,eAAIoH,EAAOnH,SACpB,IVLsB,aUOpB,OADAgH,aAAaK,QAAQ,aAAcP,KAAKQ,UAAUH,EAAOnH,UAClD,eAAImH,EAAOnH,SACpB,IVPoB,WUkBlB,OAVIc,EAAQgG,KAAKC,MAAMC,aAAaC,QAAQ,WACtC/F,KAAI,SAAAtB,GAIR,OAHIA,EAAKyB,SAAW8F,EAAOnH,QAAQJ,KAAKyB,QACtCzB,EAAKkC,MAAM0B,KAAK2D,EAAOnH,QAAQiG,MAE1BrG,KAEToH,aAAaK,QAAQ,QAASP,KAAKQ,UAAUxG,IAC7CE,EAAMc,MAAM0B,KAAK2D,EAAOnH,QAAQiG,MAChCe,aAAaK,QAAQ,aAAcP,KAAKQ,UAAUtG,IAC3C,eAAIA,GACb,IVlByB,gBUkCvB,OAfIF,EAAQgG,KAAKC,MAAMC,aAAaC,QAAQ,WACtC/F,KAAI,SAAAtB,GAIR,OAHIA,EAAKyB,SAAW8F,EAAOnH,QAAQJ,KAAKyB,QACtCzB,EAAKkC,MAAM0B,KAAK2D,EAAOnH,QAAQiG,MAE1BrG,KAEToH,aAAaK,QAAQ,QAASP,KAAKQ,UAAUxG,IAC7CE,EAAMc,MAAMZ,KAAI,SAAA+E,GAId,OAHIA,EAAKI,KAAOc,EAAOnH,QAAQqG,KAC7BJ,EAAKG,UAAYH,EAAKG,UAEjBH,KAETe,aAAaK,QAAQ,aAAcP,KAAKQ,UAAUtG,IAC3C,eAAIA,GACb,IVlCuB,cUmCrB,IAAIF,EAWJ,OAXIA,EAAQgG,KAAKC,MAAMC,aAAaC,QAAQ,WACtC/F,KAAI,SAAAtB,GAIR,OAHIA,EAAKyB,SAAW8F,EAAOnH,QAAQqB,SACjCzB,EAAKkC,MAAQ,IAERlC,KAEToH,aAAaK,QAAQ,QAASP,KAAKQ,UAAUxG,IAC7CE,EAAMc,MAAQ,GACdkF,aAAaK,QAAQ,aAAcP,KAAKQ,UAAUtG,IAE3C,eAAIA,GACb,QACE,OAAOA,IE9CXZ,ODJa,WAAoC,IAAnCY,EAAkC,uDAA1B6F,EAAeM,EAAW,uCAChD,OAAQA,EAAOpH,MACb,IXJsB,aWKpB,OAAO,eAAIoH,EAAOnH,SACpB,QACE,OAAOgB,MECbuG,EAAQ,IAAUC,SAElB,IAAMC,EAAmBC,OAAOC,sCAAwCC,IAClEC,EAAQC,YAAYC,EAAUN,EAAiBO,YAAgBC,OAErEC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,cAAc,Y","file":"static/js/main.5e5bf7b7.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://opentdb.com'\r\n});","import trivia from '../apis/trivia';\r\n\r\nimport { ADD_USER, SET_ACTIVE, GET_TRIVIA, ADD_POINTS, ADD_TASK, COMPLETE_TASK, CLEAR_TASKS } from './types';\r\n\r\nexport const addUser = (user) => {\r\n  return ({\r\n    type: ADD_USER,\r\n    payload: user\r\n  });\r\n}\r\n\r\nexport const setActive = (user) => {\r\n  return ({\r\n    type: SET_ACTIVE,\r\n    payload: user \r\n  });\r\n}\r\n\r\nexport const addPoints = (user, amount) => {\r\n  user.points += amount;\r\n  return ({\r\n    type: ADD_POINTS,\r\n    payload: user\r\n  });\r\n}\r\n\r\n\r\n// Trivia\r\nexport const getTrivia = () => async (dispatch) => {\r\n  const res = await trivia.get('/api.php?amount=1&category=11&difficulty=easy&type=multiple&encode=base64');\r\n  dispatch({type: GET_TRIVIA, payload: res.data.results[0] });\r\n};\r\n\r\n\r\n// Tasks\r\nexport const addTask = (task, user) => {\r\n  return ({\r\n    type: ADD_TASK,\r\n    payload: { task, user }\r\n  })\r\n}\r\n\r\nexport const completeTask = (id, user) => {\r\n  return ({\r\n    type: COMPLETE_TASK,\r\n    payload: { id, user }\r\n  })\r\n}\r\n\r\nexport const clearTasks = (user) => {\r\n  return ({\r\n    type: CLEAR_TASKS,\r\n    payload: user\r\n  })\r\n}","export const ADD_USER = 'ADD_USER';\r\nexport const SET_ACTIVE = 'SET_ACTIVE';\r\nexport const GET_TRIVIA = 'GET_TRIVIA';\r\nexport const ADD_POINTS = 'ADD_POINTS';\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const COMPLETE_TASK = 'COMPLETE_TASK';\r\nexport const CLEAR_TASKS = 'CLEAR_TASKS';","import React, {useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport uniqid from 'uniqid';\r\n\r\nimport { addUser, setActive } from '../actions';\r\nimport './Dashboard.css';\r\n\r\n\r\n\r\nconst Dashboard = () => {\r\n  const [inputVal, setInputVal] = useState('');\r\n  const dispatch = useDispatch();\r\n  const users = useSelector(state => state.users);\r\n\r\n  const onInputChange = (event) => {\r\n    setInputVal(event.target.value);\r\n  }\r\n\r\n  const onUserSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (inputVal !== '') {\r\n      dispatch(addUser({ name: inputVal, userid: uniqid(), points: 0, tasks: [] }));\r\n      setInputVal('');\r\n    }\r\n  }\r\n\r\n  const renderUsers = () => {\r\n    if (users) {\r\n      return (\r\n        users.map(user => {\r\n          return (\r\n            <Link to=\"/activities\">\r\n              <button key={user.userid} onClick={ () => dispatch(setActive(user))}>{user.name}</button>\r\n            </Link>\r\n          )\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"overlay\">\r\n      <div>\r\n        <h2 className=\"ui center aligned welcome-msg\">Welcome! Who is playing?</h2>\r\n        <ul className=\"user-buttons\">\r\n          {renderUsers()}\r\n        </ul>\r\n      </div>\r\n      \r\n      <div className=\"signUp\">\r\n        <h3 className=\"ui centered middle aligned four column grid see-name\">Don't see your name?</h3>\r\n        <div className=\"ui centered middle aligned four column grid\">\r\n          <form onSubmit={onUserSubmit}>\r\n              <input type=\"text\" value={inputVal} onChange={onInputChange}  className=\"enter-user\" />\r\n              <div>\r\n                  <button className=\"ui vertical animated button teal\">\r\n                      <div className=\"hidden content\">\r\n                          <i aria-hidden=\"true\" className=\"user plus icon\"></i>\r\n                      </div>\r\n                      <div className=\"visible content\">\r\n                          Add User\r\n                      </div>\r\n                  </button>\r\n              </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n      <div className=\"head-container\">\r\n          <h1 className=\"heading\">MindFull</h1>\r\n          <Link to=\"/\">\r\n            <button>Home</button>\r\n          </Link>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport './Activities.css';\r\n\r\nconst Activities = () => {\r\n  const user = useSelector(state => state.activeUser);\r\n  \r\n  const options = [{name: 'Trivia', img: 'https://www.kindpng.com/picc/m/1-13034_lightbulb-vector-transparent-background-light-bulb-clip-art.png'}, {name: \"Memory\", img: 'https://www.clipartkey.com/mpngs/m/8-84364_cartoon-brain-clip-art-brain-cartoon-transparent-background.png'}, {name: \"Tasks\", img: 'https://s.clipartkey.com/mpngs/s/65-656589_transparent-to-do-list-png-todo-list-icon.png'}];\r\n\r\n  const renderActivities = () => {\r\n    return (\r\n      options.map(activity => {\r\n        return (\r\n          <Link to={`/${activity.name.toLowerCase()}`}>\r\n            <div class=\"title-img\">\r\n              <button className=\"activity-btn\">\r\n                <h2>{activity.name}</h2>\r\n                <img src={activity.img} />\r\n              </button>\r\n            </div>\r\n            \r\n          </Link>         \r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"greeting\">\r\n        <h1>Hello {user.name}!</h1>\r\n        <h2>You have {user.points} activity points!</h2>\r\n        <p>Play activities to earn more points:</p>\r\n      </div>\r\n      <div className=\"activities-group\">\r\n        {renderActivities()}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Activities;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getTrivia, addPoints } from '../../actions';\r\nimport './Trivia.css';\r\n\r\nconst Trivia = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [msg, setMsg] = useState('');\r\n  const question = useSelector(state => state.trivia);\r\n  const user = useSelector(state => state.activeUser);\r\n\r\n  const [wrongAnswers, setWrongAnswers] = useState(0);\r\n\r\n  useEffect(() => {\r\n    dispatch(getTrivia());\r\n  }, []);\r\n\r\n  const shuffleAnswers = (ans) => {\r\n    for (let i = ans.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [ans[i], ans[j]] = [ans[j], ans[i]];\r\n    }\r\n    return ans;\r\n  }\r\n\r\n  const checkAnswer = (ans) => {\r\n    if (ans === question.correct_answer) {\r\n      var pts = (100 - (wrongAnswers*25));\r\n      dispatch(addPoints(user, pts));\r\n      setMsg(`Correct. Great job! +${pts} points`);\r\n      setTimeout(() => {\r\n        setWrongAnswers(0);\r\n        dispatch(getTrivia());\r\n        setMsg('');\r\n      }, 2000)\r\n    } else {\r\n      setWrongAnswers(wrongAnswers+1);\r\n      setMsg('Incorrect. Try again!');\r\n      \r\n    }\r\n  }\r\n\r\n  const renderAnswers = () => {\r\n    const answers = question.incorrect_answers;\r\n    \r\n    if (answers) {\r\n      if (answers.length !== 4) {\r\n        answers.push(question.correct_answer);\r\n        shuffleAnswers(answers);\r\n      }\r\n      \r\n      return (\r\n        answers.map(ans => {\r\n          return (\r\n            <button class=\"answer-button\" onClick={() => checkAnswer(ans)}>{atob(ans)}</button>\r\n          );\r\n        })\r\n      )\r\n    }\r\n    \r\n  }\r\n\r\n  const showQuestion = () => {\r\n    if (question.question){\r\n      let quesText = atob(question.question);\r\n      return quesText;\r\n    }\r\n  }\r\n\r\n  const showMsg = () => {\r\n    if (msg !== '') {\r\n      return (\r\n        <div>\r\n          <h3 className={msg[0] === 'C' ? \"success \" : \"fail \" + \"ui center aligned header\"}>\r\n            {msg}\r\n          </h3>\r\n        </div>\r\n      )\r\n    }   \r\n  }\r\n\r\n  return (\r\n    <div className=\"overlay\">\r\n      <div>\r\n        <Link to=\"/activities\">\r\n            <button className=\"finish\">Finish Trivia</button>\r\n        </Link>\r\n      </div>\r\n      \r\n      <div className=\"points\">\r\n          <p className=\"points\">Points: {user.points}</p>\r\n      </div>\r\n\r\n      <div>\r\n        <h1 className=\"question\">{showQuestion()}</h1>\r\n        <ul className=\"ui centered middle aligned four column grid\">\r\n          {renderAnswers()}\r\n        </ul>\r\n      </div>\r\n      \r\n      <div className=\"message\">\r\n          {showMsg()}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Trivia;","export const memoryPics = [{ img: 'https://content.mycutegraphics.com/graphics/bicycle/bicycle-orange.png', clicked: false },\r\n  { img: 'https://content.mycutegraphics.com/graphics/bicycle/bicycle-orange.png', clicked: false },\r\n  { img: 'https://i.pinimg.com/originals/17/84/7b/17847b8eb034e9d3f3ee996b0cad6ddb.png', clicked: false },\r\n  { img: 'https://i.pinimg.com/originals/17/84/7b/17847b8eb034e9d3f3ee996b0cad6ddb.png', clicked: false },\r\n  { img: 'https://creazilla-store.fra1.digitaloceanspaces.com/cliparts/6219/dog-clipart-md.png', clicked: false },\r\n  { img: 'https://creazilla-store.fra1.digitaloceanspaces.com/cliparts/6219/dog-clipart-md.png', clicked: false },\r\n  { img: 'https://www.clker.com/cliparts/Y/c/t/U/i/H/golf-green-md.png', clicked: false },\r\n  { img: 'https://www.clker.com/cliparts/Y/c/t/U/i/H/golf-green-md.png', clicked: false },\r\n  { img: 'https://i.pinimg.com/originals/8f/06/d9/8f06d96817c73128cda7756fee2b877c.png', clicked: false },\r\n  { img: 'https://i.pinimg.com/originals/8f/06/d9/8f06d96817c73128cda7756fee2b877c.png', clicked: false },\r\n  { img: 'https://creazilla-store.fra1.digitaloceanspaces.com/cliparts/63910/mountain-clipart-md.png', clicked: false },\r\n  { img: 'https://creazilla-store.fra1.digitaloceanspaces.com/cliparts/63910/mountain-clipart-md.png', clicked: false },\r\n  { img: 'https://i.pinimg.com/originals/6f/82/cb/6f82cb851ad6811ef373f2a1cc38a713.png', clicked: false },\r\n  { img: 'https://i.pinimg.com/originals/6f/82/cb/6f82cb851ad6811ef373f2a1cc38a713.png', clicked: false },\r\n  { img: 'https://i.pinimg.com/originals/2c/63/fc/2c63fcdee5fdfa437ce79b135bc0e67d.png', clicked: false },\r\n  { img: 'https://i.pinimg.com/originals/2c/63/fc/2c63fcdee5fdfa437ce79b135bc0e67d.png', clicked: false }\r\n  ]\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { memoryPics } from './memoryPictures';\r\n\r\nimport { addPoints } from '../../actions';\r\n\r\nimport './Memory.css';\r\n\r\nconst Memory = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector(state => state.activeUser);\r\n\r\n  const [memPics, setMemPics] = useState(memoryPics);\r\n  const [selectedPics, setSelectedPics] = useState([]);\r\n  const [successMsg, setSuccessMsg]  = useState('');\r\n  const [gameOver, setGameOver] = useState(false);\r\n\r\n  useEffect(() => {\r\n    for (let i = memPics.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [memPics[i], memPics[j]] = [memPics[j], memPics[i]];\r\n    }\r\n    setMemPics([...memPics]);\r\n  }, [])\r\n\r\n  const revealImg = (index) => {\r\n    memPics[index].clicked = true;\r\n    console.log(memoryPics[index]);\r\n    setMemPics([...memPics]);\r\n    selectedPics.push(memPics[index]);\r\n    setSelectedPics(selectedPics);\r\n  }\r\n\r\n  const renderPics = () => {\r\n    return (\r\n      memPics.map((pic, index) => {\r\n        console.log(pic);\r\n        return (\r\n          <button className=\"img-btn\">\r\n            <img src={pic.img} alt=\"Memory\" onClick={() => revealImg(index)} className={pic.clicked ? \"mem-img\" : \"transparent-mem-img\"} />\r\n          </button>\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  const flipBack = (pic1, pic2) => {\r\n    setTimeout(() => {\r\n      memPics.map(pic => {\r\n        if (pic.img === pic1.img || pic.img === pic2.img) {\r\n          pic.clicked = false;\r\n        }\r\n      });\r\n      setMemPics([...memPics]);\r\n    }, 900);\r\n  }\r\n\r\n  const checkSelectedPics = () => {\r\n    if (selectedPics.length === 2) {\r\n      if (selectedPics[0].img === selectedPics[1].img) {\r\n        dispatch(addPoints(user, 50));\r\n        setSelectedPics([]);\r\n        setSuccessMsg('Great job! +50 Points!')\r\n        removeSuccessMsg();\r\n      } else {\r\n        flipBack(selectedPics[0], selectedPics[1]);\r\n        setSelectedPics([]);\r\n        setSuccessMsg('Try again!');\r\n        removeSuccessMsg();\r\n      }\r\n    }\r\n  }\r\n\r\n  const removeSuccessMsg = () => {\r\n    setTimeout(() => {\r\n      setSuccessMsg('');\r\n    }, 900);\r\n  }\r\n\r\n  const checkComplete = () => {\r\n    var isComplete = true;\r\n    memPics.forEach(pic => {\r\n      if (!pic.clicked) {\r\n        isComplete = false;\r\n      }\r\n    });\r\n\r\n    if (isComplete && !gameOver) {\r\n      setGameOver(true);\r\n    }\r\n  }\r\n\r\n  const refreshPics = () => {\r\n    memPics.map(pic => {\r\n      pic.clicked = false;\r\n      return pic;\r\n    });\r\n\r\n    // shuffle the pictures\r\n    for (let i = memPics.length - 1; i > 0; i--) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      [memPics[i], memPics[j]] = [memPics[j], memPics[i]];\r\n    }\r\n\r\n    setMemPics([...memPics]);\r\n    setGameOver(false);\r\n  }\r\n\r\n  const resetGame = () => {\r\n    if (gameOver) {\r\n      return (\r\n        <button onClick={() => refreshPics()}>Play again!</button>\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mem-greeting\">\r\n        <h1>Memory Game:</h1>\r\n        <h3>Choose the matching images!</h3>\r\n      </div>\r\n\r\n      <div className=\"outer-grid\">\r\n        {renderPics()}\r\n      </div>\r\n      {checkSelectedPics()}\r\n      <div className=\"bottom-msg\">\r\n        <h3 className=\"success-msg\">{successMsg}</h3>\r\n        <h3 className=\"cur-pts\">Current points: {user.points}</h3>\r\n      </div>\r\n      {checkComplete()}\r\n      {resetGame()}\r\n    </div>\r\n    \r\n  )\r\n}\r\n\r\nexport default Memory;","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport uniqid from 'uniqid';\r\n\r\nimport { addTask, completeTask, clearTasks } from '../../actions';\r\nimport './Tasks.css';\r\n\r\n\r\nconst Tasks = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const tasks = useSelector(state => state.activeUser.tasks);\r\n  const [inputVal, setInputVal] = useState('');\r\n  const user = useSelector(state => state.activeUser);\r\n\r\n\r\n  const onInputChange = (event) => {\r\n    setInputVal(event.target.value);\r\n  }\r\n\r\n  const onInputSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(addTask({ text: inputVal, complete: false, id: uniqid() }, user));\r\n    setInputVal('');\r\n  }\r\n\r\n  const completeTaskFunc = (id) => {\r\n    dispatch(completeTask(id, user));\r\n  }\r\n\r\n  const renderTasks = () => {\r\n    console.log('rerender');\r\n    return (\r\n      tasks.map(task => {\r\n        return (\r\n          <li key={task.id} className={task.complete ? 'complete-task' : 'incomplete-task'}>\r\n            <input type=\"checkbox\" onClick={ () => completeTaskFunc(task.id) } className=\"check\"/>\r\n            <p className=\"task-text\">{task.text}</p>\r\n          </li>\r\n        )\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-container\">\r\n      <form onSubmit={onInputSubmit}>\r\n        <input type=\"text\" value={inputVal} onChange={onInputChange} className=\"text-input\"/>\r\n        <button className=\"add-btn\">Add Task</button>\r\n      </form>\r\n      <ul className=\"task-list\">\r\n        {renderTasks()}\r\n      </ul>\r\n      <button onClick={() => dispatch(clearTasks(user))} className=\"clear-btn\">Clear Tasks</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tasks;","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Dashboard from './Dashboard';\r\nimport Header from './Header';\r\nimport Activities from './Activities';\r\nimport Trivia from './activities/Trivia';\r\nimport Memory from './activities/Memory';\r\nimport Tasks from './activities/Tasks';\r\n\r\nconst App = (props) => {\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Header />\r\n        <Route path=\"/\" exact component={Dashboard} />\r\n        <Route path=\"/activities\" component={Activities} />\r\n        <Route path=\"/trivia\" component={Trivia} />\r\n        <Route path=\"/memory\" component={Memory} />\r\n        <Route path=\"/tasks\" component={Tasks} />\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ADD_USER, ADD_POINTS} from '../actions/types';\r\n\r\nconst INITIAL_STATE = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ADD_USER:\r\n      const localUsers = JSON.parse(localStorage.getItem(\"users\")) || [];\r\n      localUsers.push(action.payload);\r\n      localStorage.setItem('users', JSON.stringify(localUsers));\r\n      return [...state, action.payload];\r\n    case ADD_POINTS:\r\n      state.map(user => {\r\n        if (user.userid === action.payload.userid) {\r\n          user.points = action.payload.points;\r\n        }\r\n        return user;\r\n      })\r\n      localStorage.setItem('users', JSON.stringify(state));\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_ACTIVE, ADD_POINTS, ADD_TASK, COMPLETE_TASK, CLEAR_TASKS } from '../actions/types';\r\n\r\nconst INITIAL_STATE = JSON.parse(localStorage.getItem(\"activeUser\")) || {};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SET_ACTIVE:\r\n      return {...action.payload};\r\n    case ADD_POINTS:\r\n      localStorage.setItem('activeUser', JSON.stringify(action.payload));\r\n      return {...action.payload};\r\n    case ADD_TASK:\r\n      var users = JSON.parse(localStorage.getItem('users'));\r\n      users.map(user => {\r\n        if (user.userid === action.payload.user.userid) {\r\n          user.tasks.push(action.payload.task);\r\n        }\r\n        return user;\r\n      })\r\n      localStorage.setItem('users', JSON.stringify(users));\r\n      state.tasks.push(action.payload.task);\r\n      localStorage.setItem('activeUser', JSON.stringify(state));\r\n      return {...state};\r\n    case COMPLETE_TASK:\r\n      var users = JSON.parse(localStorage.getItem('users'));\r\n      users.map(user => {\r\n        if (user.userid === action.payload.user.userid) {\r\n          user.tasks.push(action.payload.task);\r\n        }\r\n        return user;\r\n      })\r\n      localStorage.setItem(\"users\", JSON.stringify(users));\r\n      state.tasks.map(task => {\r\n        if (task.id === action.payload.id) {\r\n          task.complete = !task.complete;\r\n        }\r\n        return task;\r\n      });\r\n      localStorage.setItem('activeUser', JSON.stringify(state));\r\n      return {...state};\r\n    case CLEAR_TASKS:\r\n      var users = JSON.parse(localStorage.getItem(\"users\"));\r\n      users.map(user => {\r\n        if (user.userid === action.payload.userid) {\r\n          user.tasks = [];\r\n        }\r\n        return user;\r\n      });\r\n      localStorage.setItem(\"users\", JSON.stringify(users));\r\n      state.tasks = [];\r\n      localStorage.setItem(\"activeUser\", JSON.stringify(state));\r\n\r\n      return {...state};\r\n    default:\r\n      return state;\r\n  }\r\n}","import { GET_TRIVIA } from '../actions/types';\r\n\r\nconst INITIAL_STATE = {}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case GET_TRIVIA:\r\n      return {...action.payload};\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport userReducer from './userReducer';\r\nimport activeUserReducer from './activeUserReducer';\r\nimport triviaReducer from './triviaReducer';\r\n\r\nexport default combineReducers({\r\n  users: userReducer,\r\n  activeUser: activeUserReducer,\r\n  trivia: triviaReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nrequire('dotenv').config();\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(reduxThunk)));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>, \r\n  document.querySelector('#root'));"],"sourceRoot":""}